// Generated by view binder compiler. Do not edit!
package edu.sjsu.android.localeventfinder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import edu.sjsu.android.localeventfinder.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final RecyclerView moreEventsRecycler;

  @NonNull
  public final RecyclerView nearestEventsRecycler;

  private FragmentHomeBinding(@NonNull LinearLayout rootView, @NonNull ImageView imageView2,
      @NonNull ImageView imageView3, @NonNull RecyclerView moreEventsRecycler,
      @NonNull RecyclerView nearestEventsRecycler) {
    this.rootView = rootView;
    this.imageView2 = imageView2;
    this.imageView3 = imageView3;
    this.moreEventsRecycler = moreEventsRecycler;
    this.nearestEventsRecycler = nearestEventsRecycler;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.more_events_recycler;
      RecyclerView moreEventsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (moreEventsRecycler == null) {
        break missingId;
      }

      id = R.id.nearest_events_recycler;
      RecyclerView nearestEventsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (nearestEventsRecycler == null) {
        break missingId;
      }

      return new FragmentHomeBinding((LinearLayout) rootView, imageView2, imageView3,
          moreEventsRecycler, nearestEventsRecycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
